<div class="content-header">
  <div class="container-fluid">
    <div class="row mb-2">
      <div class="col-sm-6">
        <h1 class="m-0">Dashboard</h1>
      </div>
      <div class="col-sm-6">
        <ol class="breadcrumb float-sm-right">
          <li class="breadcrumb-item"><a href="#">Home</a></li>
          <li class="breadcrumb-item active">Dashboard v1</li>
        </ol>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-3 col-6">
      <div class="small-box bg-info">
        <div class="inner">
          <h3 id="song-box">0</h3>
          <p>Total Songs</p>
        </div>
        <div class="icon"><i class="fas fa-music"></i></div>
        <a href="/admin/mysongs" class="small-box-footer"
          >More info <i class="fas fa-arrow-circle-right"></i
        ></a>
      </div>
    </div>

    <div class="col-lg-3 col-6">
      <div class="small-box bg-success">
        <div class="inner">
          <h3 id="album-box">0</h3>
          <p>Album</p>
        </div>
        <div class="icon"><i class="fas fa-compact-disc"></i></div>
        <a href="/admin/myAlbums" class="small-box-footer"
          >More info <i class="fas fa-arrow-circle-right"></i
        ></a>
      </div>
    </div>

    <div class="col-lg-3 col-6">
      <div class="small-box bg-warning">
        <div class="inner">
          <h3 id="playlist-box">0</h3>
          <p>Playlist</p>
        </div>
        <div class="icon"><i class="fas fa-th-list"></i></div>
        <a href="/admin/myPlaylist" class="small-box-footer"
          >More info <i class="fas fa-arrow-circle-right"></i
        ></a>
      </div>
    </div>

    <div class="col-lg-3 col-6">
      <div class="small-box bg-danger">
        <div class="inner">
          <h3 id="artist-box">0</h3>
          <p>Artist</p>
        </div>
        <div class="icon">
          <i class="ion ion-person-add"></i>
        </div>

        <a href="/admin/myArtist" class="small-box-footer"
          >More info <i class="fas fa-arrow-circle-right"></i
        ></a>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-12">
    <div class="card">
      <div class="card-header">
        <h3 class="card-title">All Songs</h3>

        <div class="card-tools">
          <div class="input-group input-group-sm" style="width: 150px">
            <input
              type="text"
              id="searchInput"
              class="form-control float-right"
              placeholder="Search here..."
            />
            <div class="input-group-append">
              <button type="button" class="btn btn-default" id="searchBtn">
                <i class="fas fa-search"></i>
              </button>
            </div>
          </div>
        </div>
      </div>
      <!-- /.card-header -->
      <div class="card-body table-responsive p-0">
        <table class="table table-hover text-nowrap">
          <thead>
            <tr>
              <th>Song title</th>
              <th>Release Date</th>
              <th>Likes</th>
              <th>Singer</th>
              <th>Length</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody id="music-table-body">
            <!-- Rows will be injected here using jQuery -->
          </tbody>
          <tbody id="no-results" style="display: none">
            <tr>
              <td colspan="6" style="text-align: center; color: red">
                Not found
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <!-- /.card-body -->
    </div>
    <!-- /.card -->
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.0/axios.min.js"></script>

<script>
  async function fetchCounts() {
    try {
      const response = await axios.get("/admin/dashboardcount");

      $("#song-box").text(response.data.totalSongs ?? 0);
      $("#album-box").text(response.data.totalAlbums ?? 0);
      $("#playlist-box").text(response.data.totalPlaylists ?? 0);
      $("#artist-box").text(response.data.totalArtists ?? 0);
    } catch (error) {
      console.error("Error fetching counts:", error);

      $("#song-box").text(0);
      $("#album-box").text(0);
      $("#playlist-box").text(0);
      $("#artist-box").text(0);
    }
  }

  $(document).ready(() => {
    fetchCounts();
    setInterval(fetchCounts, 30000);
  });
</script>
<script>
  function formatLength(seconds) {
    if (!seconds || isNaN(seconds)) return "N/A";
    const mins = Math.floor(seconds / 60);
    const secs = String(seconds % 60).padStart(2, "0");
    return `${mins}:${secs}`;
  }

  function filterSongsByRegex(searchQuery, musicData) {
    const $tbody = $("#music-table-body");
    const $noResults = $("#no-results");
    $tbody.empty();
    $noResults.hide();

    const regex = new RegExp(searchQuery, "i");

    let matchedCount = 0;

    musicData.forEach((song) => {
      const titleMatch = regex.test(song.title);
      const singerMatch = regex.test(song.singer ?? "");

      if (titleMatch || singerMatch) {
        const releaseDate = song.releaseDate
          ? song.releaseDate.split("T")[0]
          : "N/A";

        const row = `
       <tr>
         <td>${song.title}</td>
         <td>${releaseDate}</td>
         <td><span class="tag tag-success">${song.likesCount ?? 0}</span></td>
         <td>${song.singer ?? "Unknown"}</td>
         <td>${formatLength(song.length)}</td>
         <td>
           <button type="button" class="btn btn-primary" data-id="${song._id}">
             <i class="fas fa-edit"></i>
           </button>
           <button type="button" class="btn btn-danger delete-btn" data-id="${
             song._id
           }">
             <i class="fas fa-trash" aria-hidden="true"></i>
           </button>
         </td>
       </tr>
     `;
        $tbody.append(row);
        matchedCount++;
      }
    });

    // Show "No match found" message if nothing matches
    if (matchedCount === 0) {
      $noResults.show();
    }
  }

  let allSongs = []; // global cache

  function fetchAllMusics() {
    axios
      .get("/admin/songs")
      .then((response) => {
        allSongs = response.data;
        filterSongsByRegex($("#searchInput").val(), allSongs);
      })
      .catch((error) => {
        console.error("❌ Failed to fetch musics:", error);
      });
  }

  if (allSongs.length === 0) {
    $("#music-table-body").html(
      '<p class="text-muted">No Songs Available.</p>'
    );
  }

  function deleteMusic(id) {
    if (!confirm("Are you sure you want to delete this song?")) return;

    axios
      .delete(`/admin/song/${id}`)
      .then(() => {
        fetchAllMusics();
        fetchCounts?.(); // Safe call in case fetchCounts is defined in another script
      })
      .catch((error) => {
        console.error("❌ Delete failed:", error);
        alert("Delete failed. See console for details.");
      });
  }

  $(document).on("click", ".delete-btn", function () {
    const id = $(this).data("id");
    deleteMusic(id);
  });

  $(document).ready(() => {
    fetchCounts();
    fetchAllMusics();

    // Live filtering on every keystroke
    $("#searchInput").on("input", function () {
      const searchTerm = $(this).val().trim();
      filterSongsByRegex(searchTerm, allSongs);
    });

    setInterval(fetchCounts, 30000);
  });

  $(document).on("click", ".btn-primary[data-id]", async function () {
    const songId = $(this).data("id");

    try {
      
      const response = await axios.get(`/api/song/track/${songId}`);
      const song = response.data;

      if (song.singleTrack === true) {
        window.location.href = `/admin/uploadSong?mode=edit&id=${songId}`;
      } else {
        window.location.href = `/admin/addAlbum?mode=edit&id=${songId}`;
      }
    } catch (error) {
      console.error("Error fetching song data for editing:", error);
    }
  });
</script>
