<div class="content-header">
  <div class="container-fluid">
    <div class="row mb-2">
      <div class="col-sm-6">
        <h3 id="playlist-title" class="mb-2"></h3>
      </div>
      <div class="col-sm-6">
        <ol class="breadcrumb float-sm-right">
          <li class="breadcrumb-item">
            <a href="/admin/myPlaylist">My Playlist</a>
          </li>
          <li class="breadcrumb-item"><a href="/admin/dashboard">Home</a></li>
          <li class="breadcrumb-item active">Dashboard</li>
        </ol>
      </div>
    </div>
  </div>

  <div class="card">
    <div class="card-header">
      <h3 class="card-title">All Songs</h3>

      <div class="card-tools">
        <div class="input-group input-group-sm" style="width: 150px">
          <input
            type="text"
            id="searchInput"
            class="form-control float-right"
            placeholder="Search here..."
          />
          <div class="input-group-append">
            <button type="button" class="btn btn-default" id="searchBtn">
              <i class="fas fa-search"></i>
            </button>
          </div>
        </div>
      </div>
    </div>
    <div class="card-body table-responsive p-0">
      <table class="table table-hover text-nowrap">
        <thead>
          <tr>
            <th>Title</th>
            <th>Release Date</th>
            <th>Likes</th>
            <th>Genre</th>
            <th>Length</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody id="song-table-body"></tbody>
        <tbody id="no-results" style="display: none">
          <tr>
            <td colspan="6" style="text-align: center; color: red">
              No match found
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    const fmtLen = (secs) => {
      if (!secs || isNaN(secs)) return "N/A";
      const m = Math.floor(secs / 60),
        s = ("0" + (secs % 60)).slice(-2);
      return `${m}:${s}`;
    };
    let allPlaylistSongs = [];
    function filterPlaylistSongs(query) {
      const $tbody = $("#song-table-body").empty();
      const $noResults = $("#no-results").hide();

      const regex = new RegExp(query, "i");
      let matchCount = 0;

      allPlaylistSongs.forEach((s) => {
        const titleMatch = regex.test(s.title);
        const genreMatch = regex.test(s.genre ?? "");

        if (titleMatch || genreMatch) {
          const date = s.releaseDate ? s.releaseDate.split("T")[0] : "N/A";
          const row = `
        <tr>
          <td>${s.title}</td>
          <td>${date}</td>
          <td>${s.likesCount ?? 0}</td>
          <td>${s.genre ?? "Unknown"}</td>
          <td>${fmtLen(s.length)}</td>
          <td>
            <button type="button" class="btn btn-primary" data-id="${s._id}">
              <i class="fas fa-edit"></i>
            </button>
            <button class="btn btn-danger del" data-id="${s._id}">
              <i class="fas fa-trash"></i>
            </button>
          </td>
        </tr>
      `;
          $tbody.append(row);
          matchCount++;
        }
      });

      if (matchCount === 0) {
        $noResults.show();
      }
    }

    $(async function () {
      const pid = new URLSearchParams(window.location.search).get("playlistId");
      if (!pid)
        return $("#song-table-body").html(
          "<tr><td colspan=6>Missing playlistId</td></tr>"
        );

      try {
        const { data } = await axios.get(
          `/admin/api/myPlaylists/songs?playlistId=${pid}`
        );
        $("#playlist-title").text("Playlist: " + data.title);

        const $tb = $("#song-table-body").empty();
        if (!data.songs.length) {
          return $tb.html(
            "<tr><td colspan=6>No songs in this playlist.</td></tr>"
          );
        }
        allPlaylistSongs = data.songs;
        data.songs.forEach((s) => {
          const date = s.releaseDate ? s.releaseDate.split("T")[0] : "N/A";
          const row = `
            <tr>
              <td>${s.title}</td>
              <td>${date}</td>
              <td>${s.likesCount ?? 0}</td>
              <td>${s.genre ?? "Unknown"}</td>
              <td>${fmtLen(s.length)}</td>
              <td>
                     <button type="button" class="btn  btn-primary" data-id="${
                       s._id
                     }"> <i class="fas fa-edit"></i></button>
                <button class="btn btn-danger del" data-id="${
                  s._id
                }"><i class="fas fa-trash"></i></button></td>
            </tr>`;
          $tb.append(row);
        });
      } catch (e) {
        console.error(e);
        $("#song-table-body").html(
          "<tr><td colspan=6 class='text-danger'>Error loading songs.</td></tr>"
        );
      }
    });

    $(document).on("click", ".del", async function () {
      const id = $(this).data("id");
      if (!confirm("Delete this song?")) return;
      try {
        await axios.delete(`/admin/song/${id}`);
        location.reload();
      } catch {
        alert("Delete failed");
      }
    });

    $(document).ready(function () {
      $("#searchInput").on("input", function () {
        const val = $(this).val().trim();
        filterPlaylistSongs(val);
      });
    });

    $(document).on("click", ".btn-primary[data-id]", function () {
      const songId = $(this).data("id");
      window.location.href = `/admin/addAlbum?mode=edit&id=${songId}`;
    });
  </script>
</div>
